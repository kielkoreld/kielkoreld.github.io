---
layout: post
title:  "알고리즘 4주차"
date:   2023-03-25 15:59:00 +0900
categories: jekyll update
---
[강의 노트](https://harmonious-beluga-1f5.notion.site/4-ffc0fea02b4a4d96be7b69de1480993f)

오늘은 내용보다도 자바 개발 환경에 대해 할 이야기가 많다.

이번에 겪은 문제는 컴파일과 코드 수정 부분이다.

우선 컴파일 같은 경우에는 vscode가 class를 찾지 못해서 자바 프로그램이 실행이 되지 않는 경우여다.\
같은 디렉토리 안에 있는 *MergeSort.java* 같은 경우에는 실행에 문제가 없는데 같은 Path 내에 있는\
*QuickSelect.java*는 실행이 되지 않는 것이 이해가 되질 않았다.\
그렇게 몇 시간을 고생했건만, vscode를 껐다가 다시 켜니 정상적으로 작동이 됐다.\

그 다음 문제는 코드 수정 부분이다. 코드를 수정하다보니 만들어둔 메소드를 마지막에 사용하는 것을\
잊어서 결과가 내 예상대로 돌아가지 않았다. 결국 코드 수정을 몇 시간씩 하다가 이를 발견하고는\
자괴감이 엄청 왔다... 그리고 내가 짜면 자꾸 배열 범위에서 오류가 생겼는데, chatGPT가 수정하면\
항상 잘 돌아간다. 딱히 수정한 부분도 없는데 왜 안 되는지 이해가 되질 않지만, 지금 잘 돌아가는 것을 만족하려고 한다.

{% highlight JAVA %}
import java.util.*;

public class QuickSelect {
    public static void quicksort(int[] arr) {
        quicksort(arr, 0, arr.length - 1);
    }

    private static void quicksort(int[] arr, int left, int right) {
        if (left < right) {
            int pivot = partition(arr, left, right);
            quicksort(arr, left, pivot - 1);
            quicksort(arr, pivot + 1, right);
        }
    }

    public static int selection(int[] arr, int k) {
        return selection(arr, 0, arr.length - 1, k);
    }

    private static int selection(int[] arr, int left, int right, int k) {
        if (left == right) {
            return arr[left];
        }
        int pivot = partition(arr, left, right);
        if (k - 1 == pivot) {
            return arr[pivot];
        } else if (k - 1 < pivot) {
            return selection(arr, left, pivot - 1, k);
        } else {
            return selection(arr, pivot + 1, right, k);
        }
    }

    private static int partition(int[] arr, int left, int right) {
        int pivot = arr[right];
        int i = left - 1;
        for (int j = left; j < right; j++) {
            if (arr[j] < pivot) {
                i++;
                swap(arr, i, j);
            }
        }
        swap(arr, i + 1, right);
        return i + 1;
    }

    private static void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

    public static void main(String[] args) {
        Random r = new Random();
        int[] array = new int[10];
        for (int i = 0; i < array.length; i++) {
            array[i] = r.nextInt(100) + 1;
        }
        for (int i : array) {
            System.out.print(i + " ");
        }
        System.out.println();
        Scanner sc = new Scanner(System.in);
        int k = sc.nextInt();
        int kthsmallest = selection(array, k);
        System.out.println(k + " 번째로 작은 값은 " + kthsmallest);
        quicksort(array);
        for (int i : array) {
            System.out.print(i + " ");
        }
        sc.close();
    }
}
{% endhighlight %}